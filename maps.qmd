---
title: "Maps"
bibliography: references.bib
format: 
  html:
     code-fold: true
     code-summary: "Show the code"
number-sections: true
---


```{r}
#| include: false


library(tidyverse)
library(sf)
library(ggspatial)
library(iBats)

```

## Open Street Map

OpenStreetMap[^1] is a map of the world, created by the online community and free to use under an open license. @fig-osm shows a map[^2] of bat observations during the Lydford transect.

[^1]: <https://www.openstreetmap.org/>
[^2]: Base map is the copyright OpenStreetMap contributors

```{r}
#| warning: false
#| message: false
#| label: fig-osm
#| fig-cap: "Open Street Map of Bat Activity on the Lydford Transect"
###| fig.height: 8

library(tidyverse)
library(sf)
library(ggspatial)
library(iBats)

bat_colours_sci <- c(
  "Barbastella barbastellus" = "#1f78b4",
  "Myotis alcathoe" = "#a52a2a",
  "Myotis bechsteinii" = "#7fff00",
  "Myotis brandtii" = "#b2df8a",
  "Myotis mystacinus" = "#6a3d9a",
  "Myotis nattereri" = "#ff7f00",
  "Myotis daubentonii" = "#a6cee3",
  "Myotis spp." = "#bcee68",
  "Plecotus auritus" = "#8b0000",
  "Plecotus spp." = "#8b0000",
  "Plecotus austriacus" = "#000000",
  "Pipistrellus pipistrellus" = "#ffff99",
  "Pipistrellus nathusii" = "#8a2be2",
  "Pipistrellus pygmaeus" = "#b15928",
  "Pipistrellus spp." = "#fdbf6f",
  "Rhinolophus ferrumequinum" = "#e31a1c",
  "Rhinolophus hipposideros" = "#33a02c",
  "Nyctalus noctula" = "#cab2d6",
  "Nyctalus leisleri" = "#fb9a99",
  "Nyctalus spp." = "#eee8cd",
  "Eptesicus serotinus" = "#008b8b"
)


spatial_data <- Lydford%>% 
  select(Species, bat_time, longitude = Longitude, latitude = Latitude)

# colour values used by scale_fill_manual()
graph_bat_colours <- iBats::bat_colours(spatial_data$Species, colour_vector = bat_colours_sci)

spatial_data <- st_as_sf(spatial_data, coords = c("longitude", "latitude"), 
                 crs = 4326)

ggplot() +
  annotation_map_tile(type = "osm",  zoomin = -2, alpha = 0.5) +
  geom_sf(data = spatial_data, aes(fill = Species, size = bat_time), shape = 21, alpha = 0.5) +
  annotation_scale(location = "tl") +
  annotation_north_arrow(location = "bl", which_north = "true") +
  scale_fill_manual(values = graph_bat_colours) +
  scale_size_area(max_size = 12) +
  labs(size = "Bat Activity (secs)",
      fill = "Species") +
  theme(legend.position = "right",
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks = element_blank(),
    title = element_text(colour = "grey80", size = 14),
    legend.text = element_text(face = "italic"))


```

### GPX File

Bat detectors e.g. the Batlogger M[^3] contain a built in Global Positioning System (GPS) capable of recording the location over time to a GPX file; _note_ for the Battlogger M the _tracker_ needs to be enabled. The GPX, or GPS Exchange Format, is a text file designed as a _common_ GPS data format for software applications. It can be used to describe waypoints, tracks, and routes. The file format is open and free to use.


The transect route, and other information such as the start and finish times, is a key part of reporting. An example of transect output created from a GPX file recorded for a National Bat Monitoring Programme (NBMP)[^4] field survey is given in @fig-gpx. 



```{r}
#| warning: false
#| message: false
#| label: fig-gpx
#| fig-cap: "National Bat Monitoring Programme Field Survey Transect"
#| fig.width: 8

library(tidyverse)
library(sf)
library(hms)
library(ggspatial)
library(iBats)
library(glue)


filename <- "data//24910001_20180707.gpx"

# Read tracks layer for map plot 
transect_tracks <- sf::st_read(filename, "tracks", promote_to_multi = TRUE, quiet = TRUE)

# Read points layer to calculate transect timings
transect_points <- sf::st_read(filename, "track_points", promote_to_multi = TRUE, quiet = TRUE)
  
  
#extract coords 
point_geometry <- transect_points %>% 
  pull(geometry)

point_geometry <- sf::st_coordinates(point_geometry)

point_geometry <- tibble(point_geometry[,1], point_geometry[,2])

colnames(point_geometry) <- c("Longitude", "Latitude")

point_geometry <- as.matrix(point_geometry)

# Select date/time vector from `transect_points` dataframe
Transect_times <- transect_points %>% 
  pull(time) 

# Start time
Trans_start <- hms::as_hms(stringr::str_sub(as.character(min(Transect_times)), start = 12, end = 19))

# Finish time
Trans_finish <- hms::as_hms(stringr::str_sub(as.character(max(Transect_times)), start = 12, end = 19))

# Length of time on transect
Trans_period <- as.integer(difftime(Trans_finish, Trans_start, units = c("mins")))

# Make Transect times suitable text for printing 
Trans_start <- stringr::str_c(as.character(Trans_start), " hrs")
Trans_finish <- stringr::str_c(as.character(Trans_finish), " hrs")
Trans_period <- stringr::str_c(as.character(Trans_period), " minutes")
  

ggplot() +
  annotation_map_tile(type = "osm",  zoomin = -2, alpha = 0.3) +
  geom_sf(data = transect_tracks, size = 6, colour = "purple", alpha = 0.6) +
  annotation_scale(location = "tr") +
  annotation_north_arrow(location = "br", which_north = "true") +
  labs(title = "NBMP - Field Survey Transect") +
  theme(strip.background = element_rect(fill="black"),
    legend.position = "right",
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text.x = element_text(size=10, colour="grey20", angle = 270),
    axis.text.y = element_text(size=10, colour="grey20"),
    axis.ticks = element_blank(),
    title = element_text(colour = "black", size = 14),
    legend.text = element_text(face = "italic"))



```

The NBMP field survey transect shown in @fig-gpx `r glue(" took {Trans_period}; began at {Trans_start} and finished at {Trans_finish}.") `


[^3]: <https://www.batlogger.com/en/products/batlogger_m/>
[^4]: <http://www.bats.org.uk/pages/nbmp.html>