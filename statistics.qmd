---
title: "Statistics"
format: 
  html:
     code-fold: true
     code-summary: "Show the code"
---

```{r}
#| include=FALSE

library(knitr)
library(tidyverse)
library(iBats)
library(gt)
library(flextable)
library(dunn.test)

```

Statistical modeling is a method of mathematically approximating the world.


## Comparison of Activity

The `statics` data in the `iBats` package has some interesting Barbastelle (_Barbastella barbastellus_) bat activity, it would be interesting and aid  our understanding if we compare the activity between static locations and see if they are significantly different. 

Before undertaking any statistical test always visualise the data the statistical test is applied to. Barbastelle has been recorded at several locations see @fig-kwbarb.

The average bat pass rate per hour can been calculated for each night and each static location using the formula: 

$$AverageActivity = \frac{Batpasses}{Nightlength}$$

Where: 
_Batpasses_ = number of bat pass during the night at the location   
_Nightlength_ = length of the night in decimal hours  
_AverageActivity_ = average (mean) number of bat passes per hour for each night there was activity   




```{r}
#| label: fig-kwbarb
#| fig-cap: "Barbastelle Activity at Each Static (Nighly Average Passes per Hour)"


# Add data and time information to the statics data using the iBats::date_time_info
statics_plus <- iBats::date_time_info(statics)

# Add sun and night time metrics to the statics data using the iBats::sun_night_metrics() function.
statics_plus <- iBats::sun_night_metrics(statics_plus)


graph_data <- statics_plus %>%
    filter(Species == "Barbastella barbastellus") %>% 
    group_by(Description, Night, night_length_hr) %>%
    # count number of passes per night by species - makes coloumn "n""
    tally() %>% 
    # calculate average bat passes per hour for each Night and species
    mutate(ave_act_per_hr = n / night_length_hr) %>%
    # Remove Night Length column from the Table
    select(-night_length_hr, -n) 

ggplot(graph_data, aes(y = ave_act_per_hr, x = Description)) +
                  geom_jitter(fill = "#1f78b4", #Barbastelle colour
                              colour = "black", 
                              shape = 23, 
                              alpha = 0.7, 
                              size = 3) +
                  geom_boxplot(colour = "grey30", fill = "transparent") + 
                  labs(y = "Barbastelle Activity  \n(Nightly Average Passes per Hour)") +
                  theme_bw() + 
                  theme(legend.position = "none", # No legend
                  axis.text.x = element_text(size=12, face="bold"), 
                  axis.text.y = element_text(size=12,face="bold"), 
                  axis.title.y = element_text(face="bold"), 
                  axis.title.x = element_blank(), # no y title (just bat names)
                  panel.grid.major = element_blank(), #remove grid lines
                  panel.grid.minor = element_blank())



```

The comparison of locations is undertaken with the Mann-Whitney-Wilcoxon or Kruskal-Wallis test. The Kruskal–Wallis test is a rank-based test that is similar to the Mann-Whitney-Wilcoxon test but can be applied to one-way data with more than two groups. If there are just two locations the Mann-Whitney-Wilcoxon test is applied. The Kruskal–Wallis test may be used when there are only two samples, but the Mann-Whitney-Wilcoxon is more powerful for two samples and is preferred.  Both tests assume that the observations are independent.  The probability threshold for statistical significance, which should always be chosen before the test is undertaken, is: P < 0.05.

* __The Null Hypothesis:__ bat pass rates per hour are from distributions with the same median.

* __The Alternative Hypothesis:__ bat pass rates per hour are from distributions with a different median.

The function `kruskal.test`, from base R, is used to undertake the Kruskal-Wallis test. A rule of thumb for the Kruskal–Wallis test is each group, (in this case case the number of nightly average bats pace vales for each static location) must have a sample size of 5 or more. 

```{r}

# Add data and time information to the statics data using the iBats::date_time_info
statics_plus <- iBats::date_time_info(statics)

# Add sun and night time metrics to the statics data using the iBats::sun_night_metrics() function.
statics_plus <- iBats::sun_night_metrics(statics_plus)


test_data <- statics_plus %>%
  filter(Species == "Barbastella barbastellus") %>%
  group_by(Description, Night, night_length_hr) %>%
  # count number of passes per night by species - makes coloumn "n""
  tally() %>%
  # calculate average bat passes per hour for each Night and species
  mutate(ave_act_per_hr = n / night_length_hr) %>%
  # Remove Night Length column from the Table
  select(-night_length_hr, -n)


# Check at least 2 locations and a minimum of 5 observations per location
# Only do KW on locations with 5 or more observations
# if just two locations do Mann Whitney
check_data <- test_data %>%
  group_by(Description) %>%
  tally()

# filter for Statics with more than 5 values
StaticsWithPlus5 <- check_data %>%
  filter(n >= 5) %>%
  pull(Description)

test_data <- test_data %>%
  filter(Description %in% StaticsWithPlus5)

# Extract the p-value from the kruskal.test
stat_pvalue <- kruskal.test(ave_act_per_hr ~ Description, data = test_data)$p.value

```

The Kruskal-Wallis test was undertaken for the Barbastelle bat at the following static locations: `r knitr::combine_words(StaticsWithPlus5)`. The Kruskal-Wallis test gives a p-value of `r formatC(stat_pvalue, format = "e", digits = 2)`; therefore the null hypothesis is rejected at P<0.05. The Kruskal-Wallis test shows there is a likely difference in Barbestelle activity between some static locations.  What the Kruskal-Wallis test does not indicate, is which static locations are different; to determine this we need to undertake _post hoc_ testing, this can be undertaken with the Dunn’s Test.  

```{r}
#| include: false

dunn_result <- dunn.test(test_data$ave_act_per_hr, factor(test_data$Description), method = "bonferroni")

```

```{r}
#| eval: false

dunn_result <- dunn.test(test_data$ave_act_per_hr, factor(test_data$Description), method = "bonferroni")

```


Results of the Dunn’s test, performed after the Kruskal-Wallis test (_post hoc_), are shown in @tbl-dunns.


```{r}
#| label: tbl-dunns
#| tbl-cap: "Results of Post-hoc testing with the Dunn’s Test"


df <- tibble(dunn_result$comparisons, dunn_result$P.adjusted)

colnames(df) <- c("Comparison", "P.adj")

resultsTable <- df %>%
  filter(P.adj < 0.05) %>%
  select(`Locations with a significant difference (P<0.05)` = Comparison, `adjusted P ` = P.adj)

resultsTable %>%
  flextable(col_keys = colnames(.)) %>%
  fontsize(part = "header", size = 12) %>%
  fontsize(part = "body", size = 12) %>%
  bold(part = "header") %>%
  autofit(add_w = 0.1, add_h = 0.1) %>%
  bg(bg = "black", part = "header") %>%
  color(color = "white", part = "header") %>%
  align(align = "center", part = "header") %>%
  align(j = 2, align = "right", part = "body") %>%
  bold(j = 1, bold = TRUE, part = "body")     
```

