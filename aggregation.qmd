---
title: "Aggregation"
format: 
  html:
     code-fold: true
     code-summary: "Show the code"
---

```{r}
#| include: false

library(knitr)
library(tidyverse)
library(iBats)
library(broman)
library(gt)
library(flextable)
library(officer)

#Levels
month_levels <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")

month_levels_full <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")

```

Data aggregation is one of the pillars of data analysis, the process where *tidy* data is gathered and expressed in a summary form. Bat survey data tends to be aggregated in two ways:

1.  over a given time period, or
2.  spatially for locations or a factor related to a location (e.g. woodland)


The bat survey data `statics` in the `iBats` package has `r add_commas(nrow(statics))` bat observations; a random selection of 5 rows is shown in @tbl-aggtidy. 

```{r}
#| label: tbl-aggtidy
#| tbl-cap: "Statics Bat Survey Data (5 random selected rows)"

statics %>% # statics is a tidy data set from the iBats package
  sample_n(5) %>% 
  arrange(DateTime) %>% 
  # Table made with gt
  gt()

```

The simplest form of aggregation is a count of bats^[note:- in this case it is a count of bat passes]; as shown in @tbl-simplecount

```{r}
#| label: tbl-simplecount
#| tbl-cap: "A Count of Bats Grouped by Species"

statics %>%
  group_by(Species) %>% 
  count() %>% 
  #arrange descending
  arrange(desc(n)) %>% 
  # rename n as count
  rename(`Bat Species` = Species, count = n) %>% 
  knitr::kable()
  

```


More informative tables can be made by adding meta data such as the Month and Year of the observations.  This is easy done on a _tidy data_ conforming to the _minimal data requirement_  with the `date_time_info` function in the `iBats` package. @tbl-countannex2 shows the monthly count (bat passes) of _Annex 2_ species;  .

```{r}
#| label: tbl-countannex2
#| tbl-cap: "A Count of Annex 2 Bats Grouped by Month"

# Add data and time information to the statics data using the iBats::date_time_info
statics_plus <- iBats::date_time_info(statics)

# re-order months column with rev so months run top to bottom of the table
statics_plus <- statics_plus %>%
   mutate(MonthFull = factor(MonthFull, levels = rev(month_levels_full), ordered = T))

AnnexII <- c("Barbastella barbastellus", "Rhinolophus ferrumequinum", "Rhinolophus hipposideros")

table_border <- fp_border(color = "black", width = 1) # from library(officer)

statics_plus %>%
  filter(Species %in% AnnexII) %>%
  group_by(MonthFull, Species) %>%
  count() %>%
  # arrange descending
  arrange(desc(MonthFull)) %>%
  # rename n as count
  rename(Month = MonthFull, `Bat Species` = Species, Count = n) %>%
  # Table made with flextable
  flextable(col_keys = colnames(.)) %>%
  fontsize(part = "header", size = 12) %>%
  fontsize(part = "body", size = 12) %>%
  colformat_double(j = "Count", digits = 4, big.mark = ",") %>%
  width(j = 1, width = 2) %>%
  width(j = 2, width = 2.5) %>%
  width(j = 3, width = 1) %>%
  merge_v(j = 1) %>%
  border_inner_h(part = "body", border = table_border) %>%
  hline_bottom(part = "body", border = table_border) %>%
  bg(bg = "black", part = "header") %>%
  color(color = "white", part = "header")
  

  
```


Tables of numbers can be frustrating to read.  To help readability the table can be annotated highlighting the  count on colour scale linked to the magnitude of the result. This is shown in @tbl-countannex2c for the count of bats shown in  @tbl-countannex2. 

```{r}
#| label: tbl-countannex2c
#| tbl-cap: "A Count (Highlighted) of Annex 2 Bats Grouped by Month"

# Add data and time information to the statics data using the iBats::date_time_info
statics_plus <- iBats::date_time_info(statics)

# re-order months column with rev so months run top to bottom of the table
statics_plus <- statics_plus %>%
   mutate(MonthFull = factor(MonthFull, levels = rev(month_levels_full), ordered = T))

AnnexII <- c("Barbastella barbastellus", "Rhinolophus ferrumequinum", "Rhinolophus hipposideros")

table_border <- fp_border(color = "black", width = 1) # from library(officer)

table_data <- statics_plus %>%
  filter(Species %in% AnnexII) %>%
  group_by(MonthFull, Species) %>%
  count() %>%
  # arrange descending
  arrange(desc(MonthFull)) %>%
  # rename n as count
  rename(Month = MonthFull, `Bat Species` = Species, Count = n) 

# Find max and min counts
maxCount <- max(table_data$Count, na.rm = T)
minCount <- min(table_data$Count, na.rm = T)

#Make coloured palette
colourer <- scales::col_numeric(
  palette = c("transparent", "orangered2"),
  domain = c(minCount, maxCount)) 

# Table made with flextable
table_data %>% 
  flextable(col_keys = colnames(.)) %>%
  fontsize(part = "header", size = 12) %>%
  fontsize(part = "body", size = 12) %>%
  colformat_double(j = "Count", digits = 4, big.mark = ",") %>%
  width(j = 1, width = 2) %>%
  width(j = 2, width = 2.5) %>%
  width(j = 3, width = 1) %>%
  merge_v(j = 1) %>%
  # Scale colour to count
  bg(bg = colourer, j = "Count", part = "body") %>%
  border_inner_h(part = "body", border = table_border) %>%
  hline_bottom(part = "body", border = table_border) %>%
  bg(bg = "black", part = "header") %>%
  color(color = "white", part = "header")
  

  
```
