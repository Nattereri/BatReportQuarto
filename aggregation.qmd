---
title: "Aggregation"
format: 
  html:
     code-fold: true
     code-summary: "Show the code"
---

```{r}
#| include=FALSE

library(knitr)
library(tidyverse)
library(iBats)
library(broman)
library(gt)
library(flextable)
library(officer)

#Levels
month_levels <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")

month_levels_full <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")

```

Data aggregation is one of the pillars of data analysis, the process where *tidy* data is gathered and expressed in a summary form. Bat survey data tends to be aggregated in two ways:

1.  over a given time period, or
2.  spatially for locations or a factor related to a location (e.g. woodland)


The simplest form of aggregation is a count of bats^[note:- in this case it is a count of bat passes]. The bat survey data `statics` in the `iBats` package has `r add_commas(nrow(statics))` bat observations; a random selection of 5 rows is shown in @tbl-aggtidy. 

```{r}
#| label: tbl-aggtidy
#| tbl-cap: "Statics Bat Survey Data (5 random selected rows)"

statics %>% # statics is a tidy data set from the iBats package
  sample_n(5) %>% 
  arrange(DateTime) %>% 
  # Table made with gt
  gt()

```



```{r}
#| code-fold: show
#| label: tbl-simplecount
#| tbl-cap: "A Count of Bats Grouped by Species"

statics %>%
  group_by(Species) %>% 
  count() %>% 
  #arrange descending
  arrange(desc(n)) %>% 
  # rename n as count
  rename(`Bat Species` = Species, count = n) %>% 
  knitr::kable()
  

```


More informative tables can be made by adding meta data such as the Month and Year of the observations.  This is easy done on a _tidy data_ conforming to the _minimal data requirement_  with the `date_time_info` function in the `iBats` package. @tbl-countannex2 shows the monthly count (bat passes) of _Annex 2_ species;  .

```{r}
#| code-fold: show
#| label: tbl-countannex2
#| tbl-cap: "A Count of Annex 2 Bats Grouped by Month"

# Add data and time information to the statics data using the iBats::date_time_info
statics_plus <- iBats::date_time_info(statics)

# statics_plus <- statics_plus %>% 
#   mutate(MonthFull = factor(MonthFull, levels = month_levels_full, ordered = T))

AnnexII <- c("Barbastella barbastellus", "Rhinolophus ferrumequinum", "Rhinolophus hipposideros" )

table_border <- fp_border(color="black", width = 1) # from library(officer)

statics_plus %>%
  filter(Species %in% AnnexII) %>% 
  group_by(MonthFull, Species) %>% 
  count() %>% 
  #arrange descending
  arrange(desc(MonthFull)) %>% 
  # rename n as count
  rename(Month = MonthFull,`Bat Species` = Species, Count = n) %>% 
 flextable(col_keys = colnames(.)) %>% 
  fontsize(part = "header", size = 8) %>% 
    fontsize(part = "body", size = 8)  %>% 
      colformat_double(j = "Count", digits = 4, big.mark = ",") %>% 
  width(j = c(1, 3), width = 0.6) %>% 
    width(j = 2, width = 1.7) %>% 
   merge_v(j = 1) %>% 
  border_inner_h(part="body", border = table_border) %>% 
      hline_bottom(part="body", border = table_border)
  

  
```